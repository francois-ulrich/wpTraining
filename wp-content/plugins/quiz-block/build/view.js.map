{"version":3,"file":"view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC6D;;AAa7D;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAe,GAAG;EACtBC,KAAK,EAAE,CAAC,CAAC;EACTC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE;IACTC,SAAS,EAAEA,CAAA,KAAM;MACfC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;EACF;AACF,CAAC;AAED,MAAM;EAAEL;AAAM,CAAC,GAAGF,+DAAK,CAAsB,YAAY,EAAEC,QAAQ,CAAC,C","sources":["webpack://quiz-block/external module \"@wordpress/interactivity\"","webpack://quiz-block/webpack/bootstrap","webpack://quiz-block/webpack/runtime/make namespace object","webpack://quiz-block/./src/view.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from \"@wordpress/interactivity\";\n\ntype ServerState = {\n  state: {\n    // isDark: boolean;\n    // darkText: string;\n    // lightText: string;\n\n    skyColor: string;\n    grassColor: string;\n  };\n};\n\n// type Context = {\n//   isOpen: boolean;\n// };\n\ninterface Store {\n  state: {};\n  actions: {};\n  callbacks: {\n    logChange: () => void;\n  };\n}\n\n// const storeDef = {\n//   state: {\n//     get themeText(): string {\n//       return state.isDark ? state.darkText : state.lightText;\n//     },\n//   },\n//   actions: {\n//     toggleOpen() {\n//       const context = getContext<Context>();\n//       context.isOpen = !context.isOpen;\n//     },\n//     toggleTheme() {\n//       state.isDark = !state.isDark;\n//     },\n//   },\n//   callbacks: {\n//     logIsOpen: () => {\n//       const { isOpen } = getContext<Context>();\n//       // Log the value of `isOpen` each time it changes.\n//       console.log(`Is open: ${isOpen}`);\n//     },\n//   },\n// };\n\nconst storeDef: Store = {\n  state: {},\n  actions: {},\n  callbacks: {\n    logChange: () => {\n      console.log(\"change\");\n    },\n  },\n};\n\nconst { state } = store<ServerState & Store>(\"quiz-block\", storeDef);\n"],"names":["store","storeDef","state","actions","callbacks","logChange","console","log"],"sourceRoot":""}